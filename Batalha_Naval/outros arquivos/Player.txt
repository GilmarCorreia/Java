
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;


public abstract class  Player extends Application {
    
    private int campo[][] = new int[9][9];
    private int embarcacao = 1;
    
    
     private int valida_posicao(int linha_ini, int coluna_ini, int linha_final, int coluna_final){
       
         
         if(linha_ini > 9 || coluna_ini > 9 || linha_final > 9 || coluna_final > 9){
             
             return -1;
         }
         
         if(linha_ini > linha_final || coluna_ini > coluna_final){
             
             return -1;
         }
         
         
         if(linha_ini < 0 || coluna_ini < 0|| linha_final < 0 || coluna_final < 0){
             
             return -1;
         }
         if(linha_ini == linha_final && coluna_ini != coluna_final){
             
             for(;coluna_ini < coluna_final  ; coluna_ini++)
                if(campo[linha_ini][coluna_ini] != 0)
                    return -1;
         }
         else if (coluna_ini == coluna_final && linha_ini != linha_final){
             
             for(;linha_ini < linha_final ; linha_ini++)
                if(campo[linha_ini][coluna_ini] != 0)
                   return -1;
            }
         
         else{
             if(campo[linha_ini][coluna_ini] != 0)
                return -1;
             }
          return 1;
         }
         
         
        
    
    public void posiciona(int linha_ini, int coluna_ini, int linha_final, int coluna_final){
    
        int teste = valida_posicao( linha_ini,  coluna_ini,  linha_final,  coluna_final);
        if(teste == -1){
            System.out.println("POSICAO INVALIDA, TENTE NOVAMENTE");
            return;
        }
        if(linha_ini == linha_final && coluna_ini != coluna_final){
             
            for(;coluna_ini < coluna_final  ; coluna_ini++)
                campo[linha_ini][coluna_ini] = embarcacao;
                    
         }
         else if (coluna_ini == coluna_final && linha_ini != linha_final){
             
             for(;linha_ini < linha_final ; linha_ini++)
                campo[linha_ini][coluna_ini] = embarcacao;
            }
         
         else
             campo[linha_ini][coluna_ini] = embarcacao;
                 
             
          
      embarcacao += 1;

     }
    
    
    public void verifica(int linha, int coluna)  {
        if(linha > 9 || linha < 0 || coluna > 9 || coluna < 0){
            throw new  Exception("Coordenadas Invalidas") //System.out.println("coordenadas invalidas");
        }
        if(getCampo(linha, coluna) == 0){
            throw new Exception("ERROU");
            //System.out.println("ERROU, LIXO");
            setCampo(linha, coluna , -1);
        }
        else if(getCampo(linha, coluna) == 1){
            //System.out.println("AFUNDOU O SUBMARINO");
            throw new Exception("AFUNDOU O SUBMARINO");
            setHealth_(1,-1);
           
            setCampo(linha, coluna , -1);
            
        }
        else if(getCampo(linha, coluna) == 2){
            throw new Exception("ACERTOU UM EMBARCACAO");
            //System.out.println("ACERTOU UMA EMBARCACAO");
            setHealth(2, -1);
            
            setCampo(linha, coluna , -1);
            if(getHealth(2) == 0){
                throw new Exception("AFUNDOU");
                //System.out.println("AFUNDOU");
            }
        }
        else if(getCampo(linha, coluna) == 3){
            throw new Exception("ACERTOU UM EMBARCACAO");
            //System.out.println("ACERTOU UMA EMBARCACAO");
            setHealth(3,-1);
            
            setCampo(linha, coluna , -1);
            if(getHealth(3) == 0){
                throw new Exception("AFUNDOU");
                //System.out.println("AFUNDOU");
            }
            
            
        }
        else if(getCampo(linha, coluna) == 4){
            throw new Exception("ACERTOU UM EMBARCACAO");
            //System.out.println("ACERTOU UMA EMBARCACAO");
            setHealth(4,-1);
            
            setCampo(linha, coluna , -1);
            if(getHealth_4(4) == 0){
                throw new Exception("AFUNDOU");
                //System.out.println("AFUNDOU");
            }
        }
        
        else if(getCampo(linha, coluna) == 5){
            throw new Exception("AFUNDOU");
            //System.out.println("ACERTOU UMA EMBARCACAO");
            setHealth(5,-1)
            
            setCampo(linha, coluna, -1);
            if(getHealth_5(5) == 0){
                throw new Exception("AFUNDOU");
                //System.out.println("AFUNDOU");
                }   
            
            
         }
        
        else
            if(campo[linha][coluna] == -1){
                throw new Exception("JA ATIROU NESTA POSICAO");
                //System.out.println("JA ATIROU NESTA POSICAO");
            }
        
        
        
    }
    //FALTA A FUNCAO ATIRA
    
    
    public int getCampo(int linha, int coluna){
        return campo[linha][coluna];
    }
    
    public void setCampo(int linha, int coluna, int valor){
        this.campo[linha][coluna] = valor;
    }

    
    
    
}
        
            
       
    

